---
- name: Create
  hosts: localhost
  gather_facts: false
  vars:
    molecule_inventory:
      molecule:
        hosts: {}
    molecule_yml:
      platforms:
        - name: instance
          image: ubuntu:20.04
          user: ansible
  tasks:
    - name: List existing VMs
      community.libvirt.virt:
        command: list_vms
        state: running
      register: libvirt_vms

    - name: Debug libvirt_vms content
      ansible.builtin.debug:
        var: libvirt_vms

    - name: Verify VM list
      vars:
        _image: "{{ platform['image'] | split(':') }}"
        _running: "{{ libvirt_vms.list_vms | selectattr('name', 'equalto', platform['name']) | list }}"
        _vm:
          exists: "{{ _running | length > 0 }}"
          name: "{{ platform['name'] }}"
          user: "{{ platform['user'] | default('ansible') }}"
          image: "{{ platform['image'] }}"
      ansible.builtin.set_fact:
        kvm_vms: "{{ (kvm_vms | default([])) + [_vm] }}"
      loop: "{{ molecule_yml['platforms'] }}"
      loop_control:
        loop_var: platform
      when: libvirt_vms.list_vms | length > 0

    - name: Ensure kvm_vms is defined
      ansible.builtin.set_fact:
        kvm_vms: "{{ kvm_vms | default([]) }}"
      when: kvm_vms is not defined

    - name: Create KVM VM
      when: kvm_vms is defined and kvm_vms | length > 0 and not _vm['exists']
      community.libvirt.virt:
        name: "{{ _vm['name'] }}"
        state: running
        memory_mb: 2048
        vcpus: 2
        disks:
          - size: 10G
        networks:
          - name: default
        os_type: linux
        os_variant: ubuntu20.04
        arch: amd64
        user_data: "../cloud-init.yml"
      loop: "{{ kvm_vms }}"
      loop_control:
        loop_var: _vm

    - name: Add VM to molecule_inventory
      vars:
        inventory_partial_yaml: |
          molecule:
            hosts:
              {{ _vm['name'] }}:
                ansible_user: {{ _vm['user'] }}
      ansible.builtin.set_fact:
        molecule_inventory: >
          {{ molecule_inventory | combine(inventory_partial_yaml | from_yaml, recursive=true) }}
      loop: "{{ kvm_vms }}"
      loop_control:
        loop_var: _vm

    - name: Dump molecule_inventory
      ansible.builtin.copy:
        content: |
          {{ molecule_inventory | to_nice_yaml }}
        dest: ../../inventory/molecule_inventory.yml
        mode: '0600'

    - name: Force inventory refresh
      ansible.builtin.meta: refresh_inventory

    - name: Fail if molecule group is missing
      ansible.builtin.assert:
        that: "'molecule' in groups"
        fail_msg: |
          molecule group was not found inside inventory groups: {{ groups }}
      run_once: true

- name: Validate that inventory was refreshed
  hosts: molecule
  gather_facts: false
  tasks:
    - name: Check uname
      ansible.builtin.raw: uname -a
      register: result
      changed_when: false

    - name: Display uname info
      ansible.builtin.debug:
        msg: "{{ result.stdout }}"
