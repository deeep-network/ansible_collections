---
- name: Install services
  hosts: localhost
  gather_facts: true
  vars:
    _hostname: "{{ lookup('pipe', 'hostname -s') }}"
    _filter: "virtual_machine_id={{ _hostname | split('-') | last }}"
    _services: "{{ query('depin.libs.netbox', 'ipam.services', filter=_filter) }}"
    _service_tags: "{{ _services | selectattr('value.tags', '!=', None) | map(attribute='value.tags') }}"
  tasks:
    - name: Filter services with flagged issues
      vars:
        _has_issue: "{{ _tags | selectattr('slug', 'contains', 'issue') }}"
      when: _has_issue | length == 0
      ansible.builtin.set_fact:
        service_tags_filtered: "{{ (service_tags_filtered | default([])) + _tags }}"
      loop: "{{ _service_tags }}"
      loop_control:
        loop_var: _tags

    - name: Group services including workloads and install
      vars:
        _tags: "{{ service_tags_filtered | map(attribute='slug') }}"
        _roles: "{{ _tags | map('split', '-') | map('first') | unique }}"
        service_name: "{{ _service }}"
        service_workloads: "{{ _tags | select('contains', service_name) | map('split', '-') | map('last') | unique }}"
      when: service_tags_filtered is defined
      ansible.builtin.include_tasks:
        file: tasks/safe_include_service.yml
      loop: "{{ _roles }}"
      loop_control:
        loop_var: _service
