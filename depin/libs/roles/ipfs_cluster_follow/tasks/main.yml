---
# 1. download ipfs-cluster-follow
- name: Create program folder
  become: true
  ansible.builtin.file:
    state: directory
    owner: root
    group: root
    mode: '0755'
    dest: /opt/ipfs-cluster-follow/{{ ipfs_cluster_follow_version }}

- name: Download to tmp
  become: true
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ ipfs_cluster_follow_download_url }}"
    dest: /tmp
  failed_when: false

- name: Find binary
  become: true
  ansible.builtin.find:
    paths:
      - /tmp
      - "{{ ipfs_cluster_follow_download_path | default('/tmp') }}"
    patterns: 'ipfs-cluster-follow$'
    use_regex: true
    get_checksum: true
    recurse: true
  register: _download

- name: Extract binary
  become: true
  vars:
    _files: "{{ _download['files'] | selectattr('checksum', 'equalto', ipfs_cluster_follow_checksum | default('')) }}"
  ansible.builtin.copy:
    remote_src: true
    src: "{{ (_files | first | default(_download['files'] | first))['path'] }}"
    dest: /opt/ipfs-cluster-follow/{{ ipfs_cluster_follow_version }}
    mode: preserve

# 3. install binary
- name: Symlink binary to path
  become: true
  ansible.builtin.file:
    src: /opt/ipfs-cluster-follow/{{ ipfs_cluster_follow_version }}/ipfs-cluster-follow
    path: /usr/local/bin/ipfs-cluster-follow
    mode: '0755'
    owner: root
    group: root
    state: hard
    force: true

# 4. init ipfs-cluster-follow
- name: Setup program
  become: true
  become_user: ipfs
  block:
    - name: Init
      ansible.builtin.command: ipfs-cluster-follow {{ ipfs_cluster_follow_cluster_name }} init http://dummy.url
      args:
        creates: $HOME/.ipfs-cluster-follow/{{ ipfs_cluster_follow_cluster_name }}/service.json
    
    - name: Get default config
      ansible.builtin.slurp:
        src: $HOME/.ipfs-cluster-follow/{{ ipfs_cluster_follow_cluster_name }}/service.json
      register: _slurp_default_config

    - name: Get remote config
      become: false
      delegate_to: localhost
      when: ipfs_cluster_follow_config_url is defined
      ansible.builtin.get_url:
        checksum: "{{ ipfs_cluster_follow_config_checksum | default(omit) }}"
        url: "{{ ipfs_cluster_follow_config_url }}"
        dest: /tmp
        mode: '0644'
      register: _remote_config_file

    - name: Set remote config
      when: _remote_config_file is not skipped
      ansible.builtin.set_fact:
        _remote_config: "{{ lookup('ansible.builtin.file', _remote_config_file.dest) }}"

    - name: Create custom config
      vars:
        _default_config: "{{ _slurp_default_config['content'] | b64decode }}"
        _role_default_config: "{{ lookup('ansible.builtin.template', 'templates/config.j2') }}"
      ansible.builtin.set_fact:
        _config:
          "{{ _default_config |
              combine(_remote_config | default({}), recursive=true) |
              combine(_role_default_config, recursive=true) |
              combine(ipfs_cluster_follow_custom_config | default({}), recursive=true) |
              ansible.utils.remove_keys(target=['source'])
          }}"

    - name: Save custom config
      become_user: root
      ansible.builtin.copy:
        content: "{{ _config | to_nice_json }}"
        dest: /opt/ipfs-cluster-follow/{{ ipfs_cluster_follow_version }}/service.json
        mode: '0644'
    
    - name: Symlink modified config
      ansible.builtin.file:
        src: /opt/ipfs-cluster-follow/{{ ipfs_cluster_follow_version }}/service.json
        path: $HOME/.ipfs-cluster-follow/{{ ipfs_cluster_follow_cluster_name }}/service.json
        mode: '0644'
        owner: root
        group: root
        state: link
        force: true

# 5. install systemd service
- name: Install systemd service
  become: true
  ansible.builtin.template:
    src: templates/systemd.service.j2
    dest: /etc/systemd/system/ipfs-cluster-follow.service
    owner: root
    group: root
    mode: '0644'
  notify: start ipfs-cluster-follow
